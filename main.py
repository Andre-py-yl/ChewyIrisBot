import random
import time
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

TOKEN = "7586593962:AAHEFAbAmuTQ-KD2RAzRPHAX2MpaN3GDPmE"

FACTS = [
    "–í –∫–æ—Å–º–æ—Å–µ –µ—Å—Ç—å –æ–±–ª–∞–∫–æ —Å–ø–∏—Ä—Ç–∞ —Ä–∞–∑–º–µ—Ä–æ–º —Å 1000 —Å–æ–ª–Ω–µ—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º.",
    "–ú—É—Ä–∞–≤—å–∏ –º–æ–≥—É—Ç –ø–æ–¥–Ω–∏–º–∞—Ç—å –≤–µ—Å, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–π –∏—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ 50 —Ä–∞–∑!",
    "–¢–µ–ª–æ —á–µ–ª–æ–≤–µ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 37 —Ç—Ä–∏–ª–ª–∏–æ–Ω–æ–≤ –∫–ª–µ—Ç–æ–∫.",
]

HOROSCOPE = [
    "–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å! –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!",
    "–ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω ‚Äì –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã —É–∂–µ –±–ª–∏–∑–∫–æ.",
    "–û—Ç–¥–æ—Ö–Ω–∏ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –º–æ–º–µ–Ω—Ç–æ–º.",
]

JOKES = [
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø–æ—à—ë–ª –≤ –±–∞—Ä, –∑–∞–∫–∞–∑–∞–ª '127.0.0.1'.",
    "–ë–∞–≥–∏? –ù–µ—Ç, —ç—Ç–æ —Å–∫—Ä—ã—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏!",
    "–ü–æ—á–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ª—é–±—è—Ç –∫–æ—Ñ–µ? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç–Ω–µ—Ä–≥–∏—é!",
]

QUOTES = [
    "–ë—É–¥—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –≤ –º–∏—Ä–µ. ‚Äì –ì–∞–Ω–¥–∏",
    "–ù–µ –±–æ–π—Å—è –∏–¥—Ç–∏ –º–µ–¥–ª–µ–Ω–Ω–æ, –±–æ–π—Å—è —Å—Ç–æ—è—Ç—å –Ω–∞ –º–µ—Å—Ç–µ. ‚Äì –ö–∏—Ç–∞–π—Å–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å",
    "–ù–∞—á–Ω–∏ –¥–µ–ª–∞—Ç—å ‚Äì –∏ —Å–∏–ª—ã –ø–æ—è–≤—è—Ç—Å—è. ‚Äì –ì—ë—Ç–µ",
]

NAMES = ["–ê—Ä—Ç—É—Ä", "–ú–∏—Ö–∞–∏–ª", "–°–æ—Ñ–∏—è", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "–î–∞—Ä—å—è"]

REMINDERS = {}


async def start(update: Update, context):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç!")


async def fact(update: Update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç."""
    await update.message.reply_text(random.choice(FACTS))


async def horoscope(update: Update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —à—É—Ç–æ—á–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø."""
    await update.message.reply_text(random.choice(HOROSCOPE))


async def joke(update: Update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç."""
    await update.message.reply_text(random.choice(JOKES))


async def quote(update: Update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–æ—Ç–∏–≤–∏—Ä—É—é—â—É—é —Ü–∏—Ç–∞—Ç—É."""
    await update.message.reply_text(random.choice(QUOTES))


async def random_name(update: Update, context):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è."""
    await update.message.reply_text(f"–¢–≤–æ—ë —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è: {random.choice(NAMES)}")


async def word_count(update: Update, context):
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ."""
    text = " ".join(context.args)
    count = len(text.split())
    await update.message.reply_text(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ: {count}")


async def math_problem(update: Update, context):
    """–†–µ—à–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ."""
    try:
        expression = " ".join(context.args)
        result = eval(expression)
        await update.message.reply_text(f"–†–µ—à–µ–Ω–∏–µ: {result}")
    except Exception:
        await update.message.reply_text("–û—à–∏–±–∫–∞ –≤ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏!")


async def generate_password(update: Update, context):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å."""
    password = ''.join(random.choices(
        "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", k=12))
    await update.message.reply_text(f"–°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å: {password}")


async def convert_units(update: Update, context):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è (—Å–º ‚áÑ –º)."""
    try:
        value = float(context.args[0])
        unit = context.args[1].lower()
        if unit == "—Å–º":
            result = value / 100
            await update.message.reply_text(f"{value} —Å–º = {result} –º")
        elif unit == "–º":
            result = value * 100
            await update.message.reply_text(f"{value} –º = {result} —Å–º")
        else:
            await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '—Å–º' –∏–ª–∏ '–º'.")
    except ValueError:
        await update.message.reply_text("–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏!")


async def set_reminder(update: Update, context):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥."""
    try:
        time_sec = int(context.args[0])
        text = " ".join(context.args[1:])
        await update.message.reply_text(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {time_sec} —Å–µ–∫—É–Ω–¥.")
        time.sleep(time_sec)
        await update.message.reply_text(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {text}")
    except ValueError:
        await update.message.reply_text("–û—à–∏–±–∫–∞ –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")


async def ascii_art(update: Update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π ASCII-–∞—Ä—Ç."""
    art = [
        "(\\_/)\n(='.'=)\n(\")_(\")  - –ö—Ä–æ–ª–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è!",
        "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë\n‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë\nüê± –ö–æ—Ç–∏–∫ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ —Ç–µ–±—è!"
    ]
    await update.message.reply_text(random.choice(art))


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("fact", fact))
    app.add_handler(CommandHandler("horoscope", horoscope))
    app.add_handler(CommandHandler("joke", joke))
    app.add_handler(CommandHandler("quote", quote))
    app.add_handler(CommandHandler("name", random_name))
    app.add_handler(CommandHandler("wordcount", word_count))
    app.add_handler(CommandHandler("math", math_problem))
    app.add_handler(CommandHandler("password", generate_password))
    app.add_handler(CommandHandler("convert", convert_units))
    app.add_handler(CommandHandler("reminder", set_reminder))
    app.add_handler(CommandHandler("ascii", ascii_art))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()


if __name__ == "__main__":
    main()
